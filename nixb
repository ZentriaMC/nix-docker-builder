#!/usr/bin/env bash
set -euo pipefail

# `nix` wrapper script utilizing remote builders
flags=()

nixb_config="$( "$(git rev-parse --show-toplevel)/with_nixb" )"
if [ -z "${nixb_config}" ]; then
	# don't bother proceeding when there's no configuration
	exec nix "${@}"
fi

export NIX_CONFIG="${nixb_config}"

current_system="$(nix-instantiate --eval -E --json 'builtins.currentSystem' | jq -r '.')"
target_system="${current_system}"
orig_argv=( "${@}" )

while [ -n "${1:-}" ]; do
	arg="${1}"
	case "${arg}" in
		--expr)
			# Skip processing tons of text
			shift
			;;
		--system)
			shift
			target_system="${1}"
			;;
		--store)
			shift
			store_path="${1}"

			if ! [ "${store_path}" = "/nix/store" ] && [ "$(uname -s)" = "Darwin" ]; then
				# error: building using a diverted store is not supported on this platform
				flags+=(--max-jobs 0)
			fi
			;;
	esac
	shift
done

flags+=("--builders-use-substitutes")

set -- "${orig_argv[@]}"

if ! [ "${current_system}" = "${target_system}" ]; then
	flags+=(--max-jobs 0)
fi

exec nix "${flags[@]}" "${@}"
